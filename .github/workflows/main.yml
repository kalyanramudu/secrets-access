name: Deploy Secret Access Test SAM App

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up meta-vars
        run: |
          echo "BUILD_START=$(date +%s)" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install AWS SAM CLI
        run: pip install aws-sam-cli==1.140.0

      - name: Load environment variables from branch file
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          FILE=".github/envs/${BRANCH}.env"
          if [ ! -f "$FILE" ]; then
            echo "❌ Environment file $FILE not found!" && exit 1
          fi
          echo "✅ Loading environment variables from $FILE"
          while IFS='=' read -r key value || [ -n "$key" ]; do
            if [[ "$key" =~ ^[A-Za-z_][A-Za-z0-9_]*$ ]]; then
              echo "$key=$value" >> $GITHUB_ENV
            fi
          done < "$FILE"

      - name: Inject secrets
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          if [ "$BRANCH" = "Production" ]; then
            echo "AWS_DEFAULT_REGION=${{ secrets.PROD_AWS_REGION }}" >> $GITHUB_ENV
            echo "PROD_AWS_ARN=${{ secrets.PROD_AWS_ARN }}" >> $GITHUB_ENV
            echo "SECRET_ARN=${{ secrets.PROD_SECRET_ARN }}" >> $GITHUB_ENV
          elif [ "$BRANCH" = "Development" ]; then
            echo "AWS_DEFAULT_REGION=${{ secrets.DEV_AWS_REGION }}" >> $GITHUB_ENV
            echo "PROD_AWS_ARN=${{ secrets.DEV_AWS_ARN }}" >> $GITHUB_ENV
            echo "SECRET_ARN=${{ secrets.DEV_SECRET_ARN }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.PROD_AWS_ARN }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: SAM Build
        run: sam build --template-file secrets-access-test.yml

      - name: SAM Package
        run: |
          sam package \
            --output-template-file packaged.yaml \
            --s3-bucket ${{ env.S3_BUCKET }} \
            --s3-prefix ${{ env.S3_BUCKET_PREFIX }}

      - name: SAM Deploy
        run: |
          sam deploy \
            --template-file packaged.yaml \
            --stack-name test-secret-access \
            --capabilities CAPABILITY_IAM \
            --region ${{ env.AWS_DEFAULT_REGION }} \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --parameter-overrides SecretArn=${{ env.SECRET_ARN }}

      - name: Calculate build duration
        run: |
          END=$(date +%s)
          echo "DURATION=$((END - BUILD_START))" >> $GITHUB_ENV

      - name: Generate Slack payload
        run: |
          export STATUS="${{ job.status == 'success' && '✅ Succeeded' || job.status == 'failure' && '❌ Failed' || '⚠️ Cancelled' }}"
          export COLOR="${{ job.status == 'success' && '#2eb886' || job.status == 'failure' && '#e01e5a' || '#daa038' }}"
          export COMMIT_URL="${{ github.event.head_commit.url }}"
          export AUTHOR="${{ github.event.head_commit.author.name }}"
          export RUN_LOG_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          envsubst < .github/slack-configs/mail.template.json > slack_payload.json

      - name: Send Slack notification
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload-file-path: slack_payload.json
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
